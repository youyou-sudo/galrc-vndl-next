generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type FilesiddatasFields {
  bgm   String[]
  steam String[]
  vndb  String[]
  ymgal String[]
}

type VndbdatasReleases {
  l_digiket String?
  l_dlsite  String
  l_egs     String?
  l_steam   String?
  lang      String
  latin     String?
  mtl       String
  released  String?
  rid       String
  rtype     String
  title     String?
}

type VndbdatasTitles {
  lang     String
  latin    String?
  official String
  title    String
}

model duptimes {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  jsonorl           String
  name              String
  state             Boolean            @default(false)
  Statusdescription String?
  timeVersion       String
  type              String
  updatetime        DateTime           @default(now()) @db.Date
  filess            filesiddatas[]
  vndb              vndbdatas[]
  meilisearch_id    String[]           @db.ObjectId
  relationalIndex   meilisearchdatas[] @relation(fields: [meilisearch_id], references: [id])

  @@index([name], map: "name_1")
}

model meilisearchdatas {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  host              String?
  indexName         String?    @unique
  masterKey         String?
  adminKey          String?
  searchKey         String?
  type              String
  primaryKey        String? // 主键
  Status            String?
  Statusdescription String?
  duptimes_id       String[]   @db.ObjectId
  relatedDataTables duptimes[] @relation(fields: [duptimes_id], references: [id])

  @@index([host], map: "host_1")
}

model filesiddatas {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  cloudName String?
  cloud_id  String             @db.ObjectId
  cloud     duptimes           @relation(fields: [cloud_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  fields    FilesiddatasFields
  filetype  Boolean
  is_dir    Boolean
  path      String
  size      Int

  @@index([fields.vndb], map: "fields.vndb_1")
  @@index([fields.bgm], map: "fields.bgm_1")
  @@index([fields.steam], map: "fields.steam_1")
  @@index([fields.ymgal], map: "fields.ymgal_1")
}

model vndbdatas {
  id       String              @id @default(auto()) @map("_id") @db.ObjectId
  cloud_id String              @db.ObjectId
  cloud    duptimes            @relation(fields: [cloud_id], references: [id])
  vnid     String              @unique
  alias    String[]
  image    String
  olang    String
  releases VndbdatasReleases[]
  titles   VndbdatasTitles[]
}

model users {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String  @unique
  email     String  @unique
  password  String
  twoFactor String?
  identity  String
}
